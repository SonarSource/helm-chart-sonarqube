---
# Source: sonarqube-dce/templates/pod-disruption-budget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: secret-values.yaml-sonarqube-dce-search
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
spec:
  minAvailable: 2

  selector:
    matchLabels:
      sonarqube.datacenter/type: "search"
---
# Source: sonarqube-dce/templates/pod-disruption-budget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: secret-values.yaml-sonarqube-dce-app
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
spec:
  minAvailable: 1

  selector:
    matchLabels:
      sonarqube.datacenter/type: "app"
---
# Source: sonarqube-dce/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-values.yaml-sonarqube-dce-monitoring-passcode
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
type: Opaque
data:
  SONAR_WEB_SYSTEMPASSCODE: "ZGVmaW5lX2l0"
---
# Source: sonarqube-dce/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-values.yaml-sonarqube-dce
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
type: Opaque
data:
  jdbc-password: "c29uYXJQYXNz"
---
# Source: sonarqube-dce/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-values.yaml-sonarqube-dce-jwt
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
type: Opaque
data:
  SONAR_AUTH_JWTBASE64HS256SECRET: ""
---
# Source: sonarqube-dce/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-values.yaml-sonarqube-dce-admin-password
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
type: Opaque
stringData:
  password: "admin1"
  currentPassword: "admin"
---
# Source: sonarqube-dce/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-values.yaml-sonarqube-dce-http-proxies
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
type: Opaque
stringData:
  PLUGINS-HTTP-PROXY: ""
  PLUGINS-HTTPS-PROXY: ""
  PLUGINS-NO-PROXY: ""
  PROMETHEUS-EXPORTER-HTTP-PROXY: ""
  PROMETHEUS-EXPORTER-HTTPS-PROXY: ""
  PROMETHEUS-EXPORTER-NO-PROXY: ""
---
# Source: sonarqube-dce/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-app-config
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  sonar.properties: |
---
# Source: sonarqube-dce/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-search-config
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  sonar.properties: |
---
# Source: sonarqube-dce/templates/init-fs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-init-fs
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  init_fs.sh: |-
    chown -R 1000:0 /opt/sonarqube/data
    chown -R 1000:0 /opt/sonarqube/temp
    chown -R 1000:0 /opt/sonarqube/logs
---
# Source: sonarqube-dce/templates/init-sysctl.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-init-sysctl
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  init_sysctl.sh: |-
    if [[ "$(sysctl -n vm.max_map_count)" -lt 524288 ]]; then
      sysctl -w vm.max_map_count=524288
    fi
    if [[ "$(sysctl -n fs.file-max)" -lt 131072 ]]; then
      sysctl -w fs.file-max=131072
    fi
    if [[ "$(ulimit -n)" != "unlimited" ]]; then
      if [[ "$(ulimit -n)" -lt 131072 ]]; then
        echo "ulimit -n 131072"
        ulimit -n 131072
      fi
    fi
    if [[ "$(ulimit -u)" != "unlimited" ]]; then
      if [[ "$(ulimit -u)" -lt 8192 ]]; then
        echo "ulimit -u 8192"
        ulimit -u 8192
      fi
    fi
---
# Source: sonarqube-dce/templates/install-plugins.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-install-plugins
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  install_plugins.sh: |-
---
# Source: sonarqube-dce/templates/jdbc-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-values.yaml-sonarqube-dce-jdbc-config
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
data:
  SONAR_JDBC_USERNAME: sonarUser
  SONAR_JDBC_URL: "jdbc:postgresql://%!s(<nil>):5432/sonarDB"
---
# Source: sonarqube-dce/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secret-values.yaml-sonarqube-dce
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm

spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: sonarqube-dce
    release: secret-values.yaml
---
# Source: sonarqube-dce/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secret-values.yaml-sonarqube-dce-headless
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm

spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 9003
      targetPort: hazelcast
      protocol: TCP
      name: hazelcast
  selector:
    app: sonarqube-dce
    release: secret-values.yaml
---
# Source: sonarqube-dce/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secret-values.yaml-sonarqube-dce-search
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm

spec:
  type: ClusterIP
  ports:
    - port: 9001
      targetPort: search-port
      protocol: TCP
      name: search
    - port: 9002
      targetPort: es-port
      protocol: TCP
      name: es
  selector:
    app: sonarqube-dce-search
    release: secret-values.yaml
---
# Source: sonarqube-dce/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secret-values.yaml-sonarqube-dce-search-headless
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm

spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 9001
      targetPort: search-port
      protocol: TCP
      name: search
    - port: 9002
      targetPort: es-port
      protocol: TCP
      name: es
  selector:
    app: sonarqube-dce-search
    release: secret-values.yaml
---
# Source: sonarqube-dce/templates/sonarqube-application.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-values.yaml-sonarqube-dce-app
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
    app.kubernetes.io/name: secret-values.yaml
    sonarqube.datacenter/type: "app"
    app.kubernetes.io/instance: secret-values.yaml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/component: secret-values.yaml-sonarqube-dce
    app.kubernetes.io/version: "10.7.0-datacenter-app"
spec:
  replicas: 2
  revisionHistoryLimit: 
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarqube-dce
      release: secret-values.yaml
  template:
    metadata:
      labels:
        app: sonarqube-dce
        release: secret-values.yaml
        sonarqube.datacenter/type: "app"
      annotations:
        checksum/plugins: 9716c0ca85e72523611d201608904b1f4babb24f8d4178a453cd77616dc796c2
        checksum/config: d4b2cfb16773344be7eb4dc6f9bf390f8362c7daea5bd325ccb9dfda4e0126d3
        checksum/secret: 2001ee13e3d260ac4b1bc0dd70a8b6042cf43612cc947c3746702ed8c04f8398
    spec:
      automountServiceAccountToken: false
      initContainers:
      securityContext:
        fsGroup: 0
      containers:
        - name: sonarqube-dce
          image: sonarqube:10.7.0-datacenter-app
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: hazelcast
              containerPort: 9003
              protocol: TCP
          resources:
            limits:
              cpu: 800m
              ephemeral-storage: 512000M
              memory: 4096M
            requests:
              cpu: 400m
              ephemeral-storage: 1536M
              memory: 4096M
          env:
            - name: SONAR_WEB_CONTEXT
              value: /
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_CE_JAVAOPTS
              value: ""
            - name: SONAR_HELM_CHART_VERSION
              value: 10.8.0
            - name: SONAR_LOG_JSONOUTPUT
              value: "false"
            - name: SONAR_CLUSTER_SEARCH_HOSTS
              value: "secret-values.yaml-sonarqube-dce-search"
            - name: SONAR_CLUSTER_KUBERNETES
              value: "true"
            - name: SONAR_CLUSTER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SONAR_CLUSTER_HOSTS
              value: "secret-values.yaml-sonarqube-dce-headless"
            - name: SONAR_AUTH_JWTBASE64HS256SECRET
              valueFrom:
                secretKeyRef:
                  name: "secret-values.yaml-sonarqube-dce-jwt"
                  key: SONAR_AUTH_JWTBASE64HS256SECRET
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-values.yaml-sonarqube-dce
                  key: jdbc-password
            - name: SONAR_WEB_SYSTEMPASSCODE
              valueFrom:
                secretKeyRef:
                  name: secret-values.yaml-sonarqube-dce-monitoring-passcode
                  key: SONAR_WEB_SYSTEMPASSCODE
          envFrom:
            - configMapRef:
                name: secret-values.yaml-sonarqube-dce-jdbc-config
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                host="$(hostname -i || echo '127.0.0.1')"
                wget --no-proxy --quiet -O /dev/null --timeout=1 --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" "http://${host}:9000/api/system/liveness"
            failureThreshold: 6
            initialDelaySeconds: 0
            periodSeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/bin/bash
                # A Sonarqube container is considered ready if the status is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING
                # status about migration are added to prevent the node to be kill while sonarqube is upgrading the database.
                host="$(hostname -i || echo '127.0.0.1')"
                if wget --no-proxy -qO- http://${host}:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'; then
                  exit 0
                fi
                exit 1
            failureThreshold: 8
            initialDelaySeconds: 0
            periodSeconds: 30
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              scheme: HTTP
              path: /api/system/status
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 32
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
      serviceAccountName: default
      volumes:
      
      - name: install-plugins
        configMap:
          name: secret-values.yaml-sonarqube-dce-install-plugins
          items:
            - key: install_plugins.sh
              path: install_plugins.sh
      - name: sonarqube
        emptyDir:
          {}
      - name : tmp-dir
        emptyDir:
          {}
---
# Source: sonarqube-dce/templates/sonarqube-search.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: secret-values.yaml-sonarqube-dce-search
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
    app.kubernetes.io/name: "secret-values.yaml"
    sonarqube.datacenter/type: "search"
    app.kubernetes.io/instance: secret-values.yaml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/component: secret-values.yaml-sonarqube-dce
    app.kubernetes.io/version: "10.7.0-datacenter-search"
spec:
  podManagementPolicy : Parallel
  replicas: 3
  serviceName: secret-values.yaml-sonarqube-dce-search
  selector:
    matchLabels:
      app: sonarqube-dce-search
      release: secret-values.yaml
  volumeClaimTemplates:
  - metadata:
      name: secret-values.yaml-sonarqube-dce
      labels:
        release: secret-values.yaml
        chart: "sonarqube-dce"
        app: "secret-values.yaml-sonarqube-dce"
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "5Gi"
  template:
    metadata:
      labels:
        app: sonarqube-dce-search
        release: secret-values.yaml
        sonarqube.datacenter/type: "search"
      annotations:
        checksum/init-sysctl: 3270bd1dcfa90993ede47a5a47bac061f0cd6b704f2b2c9898e651854b7bcd1b
        checksum/init-fs: bb8e122f30f2490f44314c4f8792ff9ee636bd6166412d9c17074bab06457971
        checksum/config: d4b2cfb16773344be7eb4dc6f9bf390f8362c7daea5bd325ccb9dfda4e0126d3
        checksum/secret: 2001ee13e3d260ac4b1bc0dd70a8b6042cf43612cc947c3746702ed8c04f8398
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init-sysctl
          image: sonarqube:10.7.0-datacenter-app
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            runAsUser: 0
          resources:
            {}
          command: ["/bin/bash",
            "-e",
            "/tmp/scripts/init_sysctl.sh"]
          volumeMounts:
            - name: init-sysctl
              mountPath: /tmp/scripts/
        - name: init-fs
          image: sonarqube:10.7.0-datacenter-app
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - CHOWN
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          resources:
            {}
          command: ["sh",
            "-ex",
            "/tmp/scripts/init_fs.sh"]
          volumeMounts:
            - name: init-fs
              mountPath: /tmp/scripts/
            - mountPath: /opt/sonarqube/certs
              name: "secret-values.yaml-sonarqube-dce"
              subPath: certs
            - mountPath: /opt/sonarqube/data
              name: "secret-values.yaml-sonarqube-dce"
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: "secret-values.yaml-sonarqube-dce"
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: "secret-values.yaml-sonarqube-dce"
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
      securityContext:
        fsGroup: 0
      containers:
        - name: sonarqube-dce-search
          image: "sonarqube:10.7.0-datacenter-search"
          imagePullPolicy: IfNotPresent
          ports:
            - name: search-port
              containerPort: 9001
              protocol: TCP
            - name: es-port
              containerPort: 9002
              protocol: TCP
          resources:
            limits:
              cpu: 800m
              ephemeral-storage: 512000M
              memory: 3072M
            requests:
              cpu: 400m
              ephemeral-storage: 1536M
              memory: 3072M
          env:
            - name: SONAR_LOG_JSONOUTPUT
              value: "false"
            - name: SONAR_CLUSTER_ES_HOSTS
              value: "secret-values.yaml-sonarqube-dce-search-0,secret-values.yaml-sonarqube-dce-search-1,secret-values.yaml-sonarqube-dce-search-2,"
            - name: SONAR_CLUSTER_ES_DISCOVERY_SEED_HOSTS
              value: "secret-values.yaml-sonarqube-dce-search-headless"
            - name: SONAR_CLUSTER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/bin/bash
                # A Sonarqube search node container is considered live if http call returns 200
                host="$(hostname -i || echo '127.0.0.1')"
                if wget --auth-no-challenge --no-proxy -qO- "http://${host}:9001/_cluster/health?local=true" | grep -q -e '"status":"green"' -e '"status":"yellow"'; then
                  exit 0
                fi
                exit 1
            initialDelaySeconds: 0
            periodSeconds: 30
            failureThreshold: 6
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/bin/bash
                # A Sonarqube search node container is considered ready if the status of embedded ES is green or yellow
                host="$(hostname -i || echo '127.0.0.1')"
                if wget --auth-no-challenge --no-proxy -qO- "http://${host}:9001/_cluster/health?wait_for_status=yellow&timeout=50s" | grep -q -e '"status":"green"' -e '"status":"yellow"'; then
                  exit 0
                fi
                exit 1
            initialDelaySeconds: 0
            periodSeconds: 30
            failureThreshold: 6
            timeoutSeconds: 1
          startupProbe:
            exec:
             command:
              - sh
              - -c
              - |
                #!/bin/bash
                # A Sonarqube search node container is considered started if http call returns 200
                host="$(hostname -i || echo '127.0.0.1')"
                if wget --auth-no-challenge --no-proxy -qO- "http://${host}:9001/_cluster/health?local=true" | grep -q -e '"status":"green"' -e '"status":"yellow"'; then
                  exit 0
                fi
                exit 1
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 24
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /opt/sonarqube/certs
              name: "secret-values.yaml-sonarqube-dce"
              subPath: certs
              readOnly: true
            - mountPath: /opt/sonarqube/data
              name: "secret-values.yaml-sonarqube-dce"
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: "secret-values.yaml-sonarqube-dce"
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: "secret-values.yaml-sonarqube-dce"
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
      serviceAccountName: default
      volumes:
      
      - name: init-sysctl
        configMap:
          name: secret-values.yaml-sonarqube-dce-init-sysctl
          items:
            - key: init_sysctl.sh
              path: init_sysctl.sh
      - name: init-fs
        configMap:
          name: secret-values.yaml-sonarqube-dce-init-fs
          items:
            - key: init_fs.sh
              path: init_fs.sh
      - name: "secret-values.yaml-sonarqube-dce"
      - name : tmp-dir
        emptyDir:
          {}
---
# Source: sonarqube-dce/templates/tests/sonarqube-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "secret-values.yaml-ui-test"
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: sonarqube-dce
    chart: sonarqube-dce-10.8.0
    release: secret-values.yaml
    heritage: Helm
spec:
  automountServiceAccountToken: false
  containers:
    - name: secret-values.yaml-ui-test
      image: "sonarqube:10.7.0-datacenter-app"
      imagePullPolicy: IfNotPresent
      command: ['wget']
      args: [
        '--retry-connrefused',
        '--waitretry=1',
        '--timeout=5',
        '-t',
        '1200',
        '-qO-',
        'secret-values.yaml-sonarqube-dce:9000/api/system/status'
        ]
      resources:
        limits:
          cpu: 500m
          ephemeral-storage: 1000M
          memory: 200M
        requests:
          cpu: 500m
          ephemeral-storage: 100M
          memory: 200M
  restartPolicy: Never
---
# Source: sonarqube-dce/templates/change-admin-password-hook.yml
apiVersion: batch/v1
kind: Job
metadata:
  name: secret-values.yaml-sonarqube-dce-change-admin-password-hook
  labels:
    app: sonarqube-dce
    heritage: Helm
    release: secret-values.yaml
    helm.sh/chart: "sonarqube-dce-10.8.0"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    someAnnotaion: "toto"
spec:
  template:
    metadata:
      name: secret-values.yaml-sonarqube-dce-change-admin-password-hook
      labels:
        app: sonarqube-dce
        heritage: Helm
        release: secret-values.yaml
    spec:
      restartPolicy: OnFailure
      serviceAccountName: default
      containers:
      - name: secret-values.yaml-sonarqube-dce-change-default-admin-password
        image: curlimages/curl:8.2.0
        securityContext:
            runAsGroup: 1001
            runAsUser: 1001
        command: ["sh", "-c", 'until curl -v --connect-timeout 100 secret-values.yaml-sonarqube-dce:9000/api/system/status | grep -w UP; do sleep 10; done; curl -v --connect-timeout 100 -u admin:$CURRENT_ADMIN_PASSWORD -X POST "secret-values.yaml-sonarqube-dce:9000/api/users/change_password?login=admin&previousPassword=$CURRENT_ADMIN_PASSWORD&password=$ADMIN_PASSWORD"']
        env:
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-values.yaml-sonarqube-dce-admin-password
              key: password
        - name: CURRENT_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-values.yaml-sonarqube-dce-admin-password
              key: currentPassword
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
