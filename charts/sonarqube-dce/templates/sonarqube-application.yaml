apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sonarqube.fullname" . }}-app
  labels:
    app: {{ template "sonarqube.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    sonarqube.datacenter/type: "app"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/component: {{ template "sonarqube.fullname" . }}
    app.kubernetes.io/version: {{ (tpl .Values.ApplicationNodes.image.tag .) | trunc 63 | trimSuffix "-" | quote }}
spec:
  {{- if not .Values.ApplicationNodes.hpa.enabled }}
  replicas: {{ .Values.ApplicationNodes.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "sonarqube.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sonarqube.name" . }}
        release: {{ .Release.Name }}
        sonarqube.datacenter/type: "app"
{{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.ApplicationNodes.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/plugins: {{ include (print $.Template.BasePath "/install-plugins.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- if .Values.ApplicationNodes.prometheusExporter.enabled }}
        checksum/prometheus-config: {{ include (print $.Template.BasePath "/prometheus-config.yaml") . | sha256sum }}
        checksum/prometheus-ce-config: {{ include (print $.Template.BasePath "/prometheus-ce-config.yaml") . | sha256sum }}
{{- end }}
{{- with .Values.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.ApplicationNodes.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      {{- if or .Values.ApplicationNodes.image.pullSecrets .Values.ApplicationNodes.image.pullSecret }}
      imagePullSecrets:
        {{- if .Values.ApplicationNodes.image.pullSecret }}
        - name: {{ .Values.ApplicationNodes.image.pullSecret }}
        {{- end }}
        {{- if .Values.ApplicationNodes.image.pullSecrets }}
{{ toYaml .Values.ApplicationNodes.image.pullSecrets | indent 8 }}
        {{- end }}
      {{- end }}
      initContainers:
      {{- if .Values.ApplicationNodes.extraInitContainers }}
{{ toYaml .Values.ApplicationNodes.extraInitContainers | indent 8 }}
      {{- end }}
      {{- if .Values.postgresql.enabled }}
        - name: "wait-for-db"
          image: {{ default (include "sonarqube.image" $) .Values.initContainers.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          {{- with (include "sonarqube.initContainersSecurityContext" .) }}
          securityContext: {{- . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.initContainers.resources | indent 12 }}
          command: ["/bin/bash", "-c"]
          args: ['set -o pipefail;for i in {1..200};do (echo > /dev/tcp/{{ .Release.Name }}-postgresql/5432) && exit 0; sleep 2;done; exit 1']
      {{- end }}
      {{- if .Values.caCerts.enabled }}
        - name: ca-certs
          image: {{ default (include "sonarqube.image" $) .Values.caCerts.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          command: ["sh"]
          args: ["-c", "cp -f \"${JAVA_HOME}/lib/security/cacerts\" /tmp/certs/cacerts; if [ \"$(ls /tmp/secrets/ca-certs)\" ]; then for f in /tmp/secrets/ca-certs/*; do keytool -importcert -file \"${f}\" -alias \"$(basename \"${f}\")\" -keystore /tmp/certs/cacerts -storepass changeit -trustcacerts -noprompt; done; fi;"]
          {{- with (include "sonarqube.initContainersSecurityContext" .) }}
          securityContext: {{- . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.initContainers.resources | indent 12 }}
          volumeMounts:
            - mountPath: /tmp/certs
              name: sonarqube
              subPath: certs
            - mountPath: /tmp/secrets/ca-certs
              name: ca-certs
          {{- with .Values.env }}
          env:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if or .Values.ApplicationNodes.sonarProperties .Values.ApplicationNodes.sonarSecretProperties .Values.sonarSecretKey }}
        - name: concat-properties
          image: {{ default (include "sonarqube.image" $) .Values.initContainers.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          command: 
          - sh
          - -c
          - |
            #!/bin/sh
            if [ -f /tmp/props/sonar.properties ]; then
              cat /tmp/props/sonar.properties > /tmp/result/sonar.properties
            fi
            if [ -f /tmp/props/secret.properties ]; then
              cat /tmp/props/secret.properties > /tmp/result/sonar.properties
            fi
            if [ -f /tmp/props/sonar.properties -a -f /tmp/props/secret.properties ]; then
              awk 1 /tmp/props/sonar.properties /tmp/props/secret.properties > /tmp/result/sonar.properties
            fi
          volumeMounts:
          {{- if or .Values.ApplicationNodes.sonarProperties .Values.sonarSecretKey }}
            - mountPath: /tmp/props/sonar.properties
              name: config
              subPath: sonar.properties
          {{- end }}
          {{- if .Values.ApplicationNodes.sonarSecretProperties }}
            - mountPath: /tmp/props/secret.properties
              name: secret-config
              subPath: secret.properties
          {{- end }}
            - mountPath: /tmp/result
              name: concat-dir
          {{- with (include "sonarqube.initContainersSecurityContext" .) }}
          securityContext: {{- . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.initContainers.resources | indent 12 }}
          {{- with .Values.env }}
          env:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if .Values.ApplicationNodes.prometheusExporter.enabled }}
        - name: inject-prometheus-exporter
          image: {{ default (include "sonarqube.image" $) .Values.ApplicationNodes.prometheusExporter.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          {{- with (default (fromYaml (include "sonarqube.initContainersSecurityContext" .)) .Values.ApplicationNodes.prometheusExporter.securityContext) }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml (default .Values.initContainers.resources .Values.ApplicationNodes.prometheusExporter.resources) | indent 12 }}
          command: ["/bin/sh","-c"]
          args: ["curl -s '{{ template "prometheusExporter.downloadURL" . }}' {{ if $.Values.ApplicationNodes.prometheusExporter.noCheckCertificate }}--insecure{{ end }} --output /data/jmx_prometheus_javaagent.jar -v"]
          volumeMounts:
            - mountPath: /data
              name: sonarqube
              subPath: data
          env:
          {{- with (include "sonarqube.prometheusExporterProxy.env" .) }}
          {{- . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if .Values.ApplicationNodes.plugins.install }}
        - name: install-plugins
          image: {{ default (include "sonarqube.image" $) .Values.ApplicationNodes.plugins.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          command: ["sh",
            "-e",
            "/tmp/scripts/install_plugins.sh"]
          volumeMounts:
            - mountPath: {{ .Values.sonarqubeFolder }}/extensions/plugins
              name: sonarqube
              subPath: extensions/plugins
            - name: install-plugins
              mountPath: /tmp/scripts/
            {{- if .Values.ApplicationNodes.plugins.netrcCreds }}
            - name: plugins-netrc-file
              mountPath: /root
            {{- end }}
          {{- with (default (fromYaml (include "sonarqube.initContainersSecurityContext" .)) .Values.ApplicationNodes.plugins.securityContext) }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml (default .Values.initContainers.resources .Values.ApplicationNodes.plugins.resource) | indent 12 }}
          env:
          {{- with (include "sonarqube.install-plugins-proxy.env" .) }}
          {{- . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if and .Values.jdbcOverwrite.oracleJdbcDriver .Values.jdbcOverwrite.oracleJdbcDriver.url }}
        - name: install-oracle-jdbc-driver
          image: {{ default (include "sonarqube.image" $) .Values.initContainers.image }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy  }}
          command: ["sh", "-e", "/tmp/scripts/install_oracle_jdbc_driver.sh"]
          {{- with (default (fromYaml (include "sonarqube.initContainersSecurityContext" .)) .Values.initContainers.securityContext) }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.initContainers.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.sonarqubeFolder }}/extensions/jdbc-driver/oracle
              name: sonarqube
              subPath: extensions/jdbc-driver/oracle 
            - name: install-oracle-jdbc-driver
              mountPath: /tmp/scripts/
          {{- if .Values.jdbcOverwrite.oracleJdbcDriver.netrcCreds }}
            - name: oracle-jdbc-driver-netrc-file
              mountPath: /root
          {{- end }}
          {{- if .Values.caCerts.enabled }} 
            - mountPath: /tmp/secrets/ca-certs
              name: ca-certs
          {{- end }}
          {{- with .Values.env }}
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- with (include "sonarqube.ApplicationNodes.securityContext" .) }}
      securityContext: {{- . | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.ApplicationNodes.extraContainers }}
        {{- toYaml .Values.ApplicationNodes.extraContainers | nindent 8 }}
      {{- end }}
        - name: {{ .Chart.Name }}
          image: {{ template "sonarqube.image" . }}
          imagePullPolicy: {{ .Values.ApplicationNodes.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            {{- if .Values.ApplicationNodes.prometheusExporter.enabled }}
            - name: monitoring-web
              containerPort: {{ .Values.ApplicationNodes.prometheusExporter.webBeanPort }}
              protocol: TCP
            - name: monitoring-ce
              containerPort: {{ .Values.ApplicationNodes.prometheusExporter.ceBeanPort }}
              protocol: TCP
            {{- end }}
            - name: hazelcast
              containerPort: 9003
              protocol: TCP
          resources:
{{ toYaml (default .Values.ApplicationNodes.resources .Values.resource) | indent 12 }}
          env:
          {{- (include "sonarqube.combined_app_env" . | fromJsonArray) | toYaml | trim | nindent 12 }}
            - name: SONAR_HELM_CHART_VERSION
              value: {{ .Chart.Version | replace "+" "_" }}
            {{- if .Values.OpenShift.enabled }}
            - name: IS_HELM_OPENSHIFT_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.ApplicationNodes.hpa.enabled }}
            - name: IS_HELM_AUTOSCALING_ENABLED
              value: "true"
            {{- end }}
            - name: SONAR_LOG_JSONOUTPUT
              value: "{{ .Values.logging.jsonOutput }}"
            - name: SONAR_CLUSTER_SEARCH_HOSTS
              value: "{{ template "sonarqube.fullname" . }}-search"
            - name: SONAR_CLUSTER_KUBERNETES
              value: "true"
            - name: SONAR_CLUSTER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SONAR_CLUSTER_HOSTS
              value: "{{ template "sonarqube.fullname" . }}-headless"
            - name: SONAR_AUTH_JWTBASE64HS256SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ template "jwtSecret" . }}"
                  key: SONAR_AUTH_JWTBASE64HS256SECRET
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "jdbc.secret" . }}
                  key: {{ template "jdbc.secretPasswordKey" . }}
            - name: SONAR_WEB_SYSTEMPASSCODE
              valueFrom:
                secretKeyRef:
                {{- if and .Values.monitoringPasscodeSecretName .Values.monitoringPasscodeSecretKey }}
                  name: {{ .Values.monitoringPasscodeSecretName }}
                  key: {{ .Values.monitoringPasscodeSecretKey }}
                {{- else }}
                  name: {{ template "sonarqube.fullname" . }}-monitoring-passcode
                  key: SONAR_WEB_SYSTEMPASSCODE
                {{- end }}
            {{- if .Values.searchNodes.searchAuthentication.enabled }}
            - name: SONAR_CLUSTER_SEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ template "search.userPassword" . }}" 
                  key: SONAR_CLUSTER_SEARCH_PASSWORD
            {{- end }}
            {{- if and .Values.searchNodes.searchAuthentication.enabled .Values.nodeEncryption.enabled }}
            - name: SONAR_CLUSTER_ES_HTTP_SSL_KEYSTORE
              value: "{{ .Values.sonarqubeFolder }}/es-secret/elastic-stack-ca.p12"
            - name: SONAR_CLUSTER_ES_HTTP_SSL_KEYSTOREPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ template "search.ksPassword" . }}"
                  key: SONAR_CLUSTER_ES_HTTP_SSL_KEYSTOREPASSWORD
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "sonarqube.fullname" . }}-jdbc-config
{{- range .Values.extraConfig.secrets }}
            - secretRef:
                name: {{ . }}
{{- end }}
{{- range .Values.extraConfig.configmaps }}
            - configMapRef:
                name: {{ . }}
{{- end }}
          livenessProbe:
{{ tpl (omit .Values.ApplicationNodes.livenessProbe "sonarWebContext" | toYaml | indent 12) . }}
          readinessProbe:
{{ tpl (omit .Values.ApplicationNodes.readinessProbe "sonarWebContext" | toYaml | indent 12) . }}
          startupProbe:
            httpGet:
              scheme: HTTP
              path: {{ .Values.ApplicationNodes.startupProbe.sonarWebContext | default (include "sonarqube.webcontext" .) }}api/system/status
              port: http
            initialDelaySeconds: {{ .Values.ApplicationNodes.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ApplicationNodes.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.ApplicationNodes.startupProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.ApplicationNodes.startupProbe.timeoutSeconds }}
          {{- with (include "sonarqube.ApplicationNodes.containerSecurityContext" .) }}
          securityContext: {{- . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if or .Values.ApplicationNodes.sonarProperties .Values.ApplicationNodes.sonarSecretProperties .Values.sonarSecretKey }}
            - mountPath: {{ .Values.sonarqubeFolder }}/conf/sonar.properties
              subPath: sonar.properties
              name: concat-dir
            {{- end }}
            {{- if .Values.sonarSecretKey }}
            - mountPath: {{ .Values.sonarqubeFolder }}/secret/
              name: secret
            {{- end }}
            {{- if .Values.caCerts.enabled }}
            - mountPath: {{ .Values.sonarqubeFolder }}/certs
              name: sonarqube
              subPath: certs
            {{- end }}
            - mountPath: {{ .Values.sonarqubeFolder }}/data
              name: sonarqube
              subPath: data
            {{- if .Values.ApplicationNodes.plugins.install }}
            - mountPath: {{ .Values.sonarqubeFolder }}/extensions/plugins
              name: sonarqube
              subPath: extensions/plugins
            {{- end }}
            {{- if and .Values.jdbcOverwrite.oracleJdbcDriver .Values.jdbcOverwrite.oracleJdbcDriver.url }}
            - mountPath: {{ .Values.sonarqubeFolder }}/extensions/jdbc-driver/oracle
              name: sonarqube
              subPath: extensions/jdbc-driver/oracle
            {{- end }}
            - mountPath: {{ .Values.sonarqubeFolder }}/temp
              name: sonarqube
              subPath: temp
            - mountPath: {{ .Values.sonarqubeFolder }}/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            {{- if .Values.ApplicationNodes.prometheusExporter.enabled }}
            - mountPath: {{ .Values.sonarqubeFolder }}/conf/prometheus-config.yaml
              subPath: prometheus-config.yaml
              name: prometheus-config
            - mountPath: {{ .Values.sonarqubeFolder }}/conf/prometheus-ce-config.yaml
              subPath: prometheus-ce-config.yaml
              name: prometheus-ce-config
            {{- end }}
            {{- if and .Values.searchNodes.searchAuthentication.enabled .Values.nodeEncryption.enabled }}
            - mountPath: {{ .Values.sonarqubeFolder }}/es-secret/
              name: es-secret
              readOnly: true
            {{- end }}
            {{- with .Values.ApplicationNodes.extraVolumeMounts -}}
            {{- toYaml . | nindent 12 }}
            {{- end }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- else if .Values.ApplicationNodes.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.ApplicationNodes.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- else if .Values.ApplicationNodes.tolerations }}
      tolerations:
{{ toYaml .Values.ApplicationNodes.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- else if .Values.ApplicationNodes.affinity }}
      affinity:
{{ toYaml .Values.ApplicationNodes.affinity | indent 8 }}
    {{- end }}
      serviceAccountName: {{ template "sonarqube.serviceAccountName" . }}
      volumes:
      {{- if or .Values.ApplicationNodes.sonarProperties .Values.sonarSecretKey }}
      - name: config
        configMap:
          name: {{ template "sonarqube.fullname" . }}-app-config
          items:
          - key: sonar.properties
            path: sonar.properties
      {{- end }}
      {{- if .Values.ApplicationNodes.sonarSecretProperties }}
      - name: secret-config
        secret:
          secretName: {{ .Values.ApplicationNodes.sonarSecretProperties }}
          items:
          - key: secret.properties
            path: secret.properties
      {{- end }}
      {{- if .Values.sonarSecretKey }}
      - name: secret
        secret:
          secretName: {{ .Values.sonarSecretKey }}
          items:
          - key: sonar-secret.txt
            path: sonar-secret.txt
      {{- end }}
      {{- include "sonarqube.volumes.caCerts" . | nindent 6 }}
      {{- if .Values.ApplicationNodes.plugins.netrcCreds }}
      - name: plugins-netrc-file
        secret:
          secretName: {{ .Values.ApplicationNodes.plugins.netrcCreds }}
          items:
          - key: netrc
            path: .netrc
      {{- end }}
      - name: install-plugins
        configMap:
          name: {{ template "sonarqube.fullname" . }}-install-plugins
          items:
            - key: install_plugins.sh
              path: install_plugins.sh
      {{- if and .Values.jdbcOverwrite.oracleJdbcDriver .Values.jdbcOverwrite.oracleJdbcDriver.url }}
      - name: install-oracle-jdbc-driver
        configMap:
          name: {{ template "sonarqube.fullname" . }}-install-oracle-jdbc-driver
          items:
            - key: install_oracle_jdbc_driver.sh
              path: install_oracle_jdbc_driver.sh
      {{- if .Values.jdbcOverwrite.oracleJdbcDriver.netrcCreds }}
      - name: oracle-jdbc-driver-netrc-file
        secret:
          secretName: {{ .Values.jdbcOverwrite.oracleJdbcDriver.netrcCreds }}
          items:
          - key: netrc
            path: .netrc
      {{- end }}
      {{- end }}
      {{- if .Values.ApplicationNodes.prometheusExporter.enabled }}
      - name: prometheus-config
        configMap:
          name: {{ template "sonarqube.fullname" . }}-prometheus-config
          items:
            - key: prometheus-config.yaml
              path: prometheus-config.yaml
      - name: prometheus-ce-config
        configMap:
          name: {{ template "sonarqube.fullname" . }}-prometheus-ce-config
          items:
            - key: prometheus-ce-config.yaml
              path: prometheus-ce-config.yaml
      {{- end }}
      {{- if and .Values.searchNodes.searchAuthentication.enabled .Values.nodeEncryption.enabled }}
      - name: es-secret
        secret:
          secretName: {{ .Values.searchNodes.searchAuthentication.keyStoreSecret }}
      {{- end }}
      - name: sonarqube
        emptyDir: {{- toYaml .Values.emptyDir | nindent 10 }}
      - name : tmp-dir
        emptyDir: {{- toYaml .Values.emptyDir | nindent 10 }}
        {{- if or .Values.ApplicationNodes.sonarProperties .Values.ApplicationNodes.sonarSecretProperties .Values.sonarSecretKey }}
      - name : concat-dir
        emptyDir: {{- toYaml .Values.emptyDir | nindent 10 -}}
        {{- end }}
      {{- with .Values.ApplicationNodes.extraVolumes -}}
      {{- toYaml . | nindent 6 }}
      {{- end }}
