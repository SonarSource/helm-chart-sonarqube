trigger_release_task:
  timeout_in: 15m
  eks_container:
    <<: *STD_CONTAINER_TEMPLATE
    cpu: 1
    memory: 1Gb
  only_if: $CIRRUS_PRERELEASE != "true" && $CIRRUS_RELEASE != ""
  <<: *CLONE_SCRIPT_TEMPLATE
  stateful: 'true'
  environment_cache:
    folder: ${CIRRUS_WORKING_DIR}/*.tgz*
    fingerprint_script: echo $CIRRUS_BUILD_ID
  env:
    GITHUB_TOKEN: VAULT[development/github/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-releases token]
    SLACK_TOKEN: VAULT[development/kv/data/slack data.token]
  gh_action_script: |
    source cirrus-env RELEASE
    CHARTS=$(find $CIRRUS_WORKING_DIR -maxdepth 1 -name "*.tgz*" -type f -exec basename "{}" ";")
    [[ "x$CHARTS" == "x" ]] && exit 0
    gh workflow run release.yml -f version=$CIRRUS_TAG -f buildNumber=$BUILD_NUMBER
  depends_on:
    - sonarqube_chart_packaging
    - sonarqube_dce_chart_packaging
    - sonarqube_push_to_repox
    - sonarqube_dce_push_to_repox
  on_failure:
    slack_notification_script:
      - ./.cirrus/slack-notification.sh
