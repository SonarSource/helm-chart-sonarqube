build_gcp_app_template: &BUILD_GCP_APP_TEMPLATE
  ec2_instance:
    <<: *VM_TEMPLATE
  skip: "!changesInclude('charts/sonarqube-dce/*', 'charts/sonarqube-dce/**/*', 'google-cloud-marketplace-k8s-app/*', 'google-cloud-marketplace-k8s-app/**/*', 'tests/unity-compatibility-test/sonarqube-dce/*', '.cirrus/*.sh', '.cirrus/tasks{_sonarqube_dce,_templates,_gcp_marketplace,}.yml', '.cirrus/tasks.star', '.cirrus.star')"
  login_to_gcr_script:
    - export DOCKER_GCLOUD_PASSWORD=$(echo ${DOCKER_GCLOUD_SA_KEY} | base64 -d)
    - docker login -u _json_key -p "$DOCKER_GCLOUD_PASSWORD" https://${GCLOUD_REGISTRY}
  install_helm_script:
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
  helm_dependency_build_script:
    - ./.cirrus/build_chart_dependencies.sh charts/sonarqube-dce
  tag_and_promote_script:
    - export CURRENT_MINOR_VERSION=$(echo ${GCLOUD_TAG} | cut -d '.' -f 1,2)
    - docker build -f google-cloud-marketplace-k8s-app/Dockerfile --build-arg REGISTRY=${GCLOUD_REGISTRY} --build-arg TAG=${GCLOUD_TAG} --tag ${GCLOUD_REGISTRY}/${GCLOUD_PRODUCT_NAME}/deployer:${CURRENT_MINOR_VERSION} .
    - docker tag ${GCLOUD_REGISTRY}/${GCLOUD_PRODUCT_NAME}/deployer:${CURRENT_MINOR_VERSION} ${GCLOUD_REGISTRY}/${GCLOUD_PRODUCT_NAME}/deployer:${GCLOUD_TAG}
    - docker push ${GCLOUD_REGISTRY}/${GCLOUD_PRODUCT_NAME}/deployer:${GCLOUD_TAG}
    - docker push ${GCLOUD_REGISTRY}/${GCLOUD_PRODUCT_NAME}/deployer:${CURRENT_MINOR_VERSION}

build_gcp_staging_app_task:
  <<: *BUILD_GCP_APP_TEMPLATE
  only_if: $TRIGGER == "PUSH_STAGING_DEPLOYER" || $TRIGGER == "PUSH_PROD_DEPLOYER" || $BRANCH == "master"
  env:
    GCLOUD_PRODUCT_NAME: sonarqube-dce-staging

verify_gcp_app_template: &VERIFY_GCP_APP_TEMPLATE
  only_if: $TRIGGER == "PUSH_STAGING_DEPLOYER" || $BRANCH == "master"
  env:
    BASE_FOLDER: "/root/.gcp/cache"
    PATH: "${BASE_FOLDER}:${BASE_FOLDER}/google-cloud-sdk/bin:${PATH}"
    KUBE_CONFIG: "/tmp/kubeconfig"
    KUBECONFIG: "${KUBE_CONFIG}"
    HOME: "/tmp"
    GCLOUD_CLI_VERSION: 495.0.0
    MPDEV_VERSION: 0.12.4
  gcp_cache:
    folder: ${BASE_FOLDER}
    fingerprint_script: echo "${GCLOUD_CLI_VERSION}+${MPDEV_VERSION}"
    populate_script:
      - ./.cirrus/setup.sh
  ec2_instance:
    <<: *VM_TEMPLATE
  login_script:
    - echo ${DOCKER_GCLOUD_SA_KEY} | base64 -d > /tmp/key.json
    - gcloud auth activate-service-account cirrusciservice@sonarqube-marketplace-provider.iam.gserviceaccount.com --key-file /tmp/key.json --project=sonarqube-marketplace-provider
    - gcloud auth configure-docker gcr.io --quiet
    - gcloud container clusters get-credentials sonarqube-marketplace-staging-standard --zone=europe-west1-b --project=sonarqube-marketplace-provider
  verify_script:
    - kubectl get pods
    - mpdev verify --deployer=$GCLOUD_REGISTRY/$GCLOUD_PRODUCT_NAME/deployer:$GCLOUD_TAG --wait_timeout=1200 --parameters='{"name":"${GCLOUD_PRODUCT_NAME}-cirrus-test", "namespace":"test-cirrus","ApplicationNodes.jwtSecret":"dZ0EB0KxnF++nr5+4vfTCaun/eWbv6gOoXodiAMqcFo=", "postgresql.enabled":true, "jdbcOverwrite.enabled":false }'
  depends_on:
    - build_gcp_staging_app

verify_gcp_staging_app_task:
  <<: *VERIFY_GCP_APP_TEMPLATE
  only_if: $TRIGGER == "PUSH_STAGING_DEPLOYER" || $TRIGGER == "PUSH_PROD_DEPLOYER" || $BRANCH == "master"
  env:
    GCLOUD_PRODUCT_NAME: sonarqube-dce-staging
  depends_on:
    - build_gcp_staging_app

release_gcp_prod_app_task:
  <<: *BUILD_GCP_APP_TEMPLATE
  only_if: $TRIGGER == "PUSH_PROD_DEPLOYER"
  env:
    GCLOUD_REGISTRY: gcr.io/sonarsource-public
    GCLOUD_PRODUCT_NAME: official-sonarqube-data-center-edition
  depends_on:
    - verify_gcp_staging_app
